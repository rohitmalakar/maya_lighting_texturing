//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//srbUVTransfer.mel - MEL Script
//Copyright (C) Suchan Raj Bajracharya
//Title: SRB - SRB - UV Transfer v0.3
//AUTHOR:	Suchan Raj Bajracharya
//				suchan@incessantrain.com
//				srb_yagya@hotmail.com		
//VERSION: 0.1
//DATE: May 6th, 2009
//DESCRIPTION: Use this Tool to automatically transfer the UV sets of multiple objects...
//USAGE: Load the source objects and the target objects and click apply...
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//CREATE THE GLOBAL PROCEDURE FOR srbUVTransfer.mel---
global proc srbUVTransfer () 
	{
	if (`window -exists srbUVTransferWin`) 
		deleteUI srbUVTransferWin;

	window	
		-s 1
		-rtf 1
		-title "SRB UV Transfer v0.2"
		srbUVTransferWin;

	columnLayout -adj 1 -rowSpacing 2;
	
	rowLayout
		-numberOfColumns 2
		-columnWidth2 230 230
		-columnAttach 1 "both" 5
		-columnAttach 2 "both" 5;

//SOURCE LIST
		columnLayout
			-adjustableColumn true
			-columnAlign "center";
	
		text -label "Source Objects";

		textScrollList
 			-numberOfRows 25
			-allowMultiSelection true			
 			srbUVSourceTSL;

		setParent..;

//TARGET LIST
		columnLayout
			-adjustableColumn true
			-columnAlign "center";
	
		text -label "Target Objects";

		textScrollList
			-numberOfRows 25
			-allowMultiSelection true
			srbUVTargetTSL;

		setParent..;
	setParent..;
	separator -h 10;

	rowLayout
		-numberOfColumns 2
		-columnWidth2 230 230
		-columnAttach 1 "both" 5
		-columnAttach 2 "both" 5;

		radioCollection;
			radioButton -sl -label "Transfer One to One" srbUVTransferOneRB;
			radioButton -label "Transfer One to All" srbUVTransferAllRB;

		setParent..;
		separator -h 10;
	checkBox -align "left" -label "Transfer on the basis of vertex count" -cc "vertexBaseTransfer_proc" verterCountCB;
	checkBox -align "left" -en 0 -label "Also Assign Shader" assignShaderCB;

	separator -h 10;
	setParent..;

	rowLayout
		-numberOfColumns 2
		-columnWidth2 230 230
		-columnAttach 1 "both" 5
		-columnAttach 2 "both" 5;

	
	button -bgc 0.8 0.8 0.8 -l "Add Source Objects" -c "srbUVAddToList(0)";
	button -bgc 0.8 0.8 0.8 -l "Add Target Objects" -c "srbUVAddToList(1)";

	setParent..;

	rowLayout
		-numberOfColumns 2
		-columnWidth2 230 230
		-columnAttach 1 "both" 5
		-columnAttach 2 "both" 5;
	
	button  -bgc 0.5 0.5 0.5  -l "Remove All Source Objects" -c ("textScrollList -edit -removeAll srbUVSourceTSL");
	button  -bgc 0.5 0.5 0.5 -l "Remove All Target Objects" -c ("textScrollList -edit -removeAll srbUVTargetTSL");

	//SET PARENT TO THE MAIN LAYOUT---
	setParent..;

	button -l "Apply" -c "srbUVTransferProc";

	showWindow srbUVTransferWin;
	}

//GLOBAL PROCEDURE FOR srbUVAddToList---
global proc srbUVAddToList (int $choice) 
	{
	string $srbSelObjs[] = sort(`ls -sl`);
	if ($choice == 0)
		{
		for ($objs in $srbSelObjs)
			textScrollList -edit -append $objs srbUVSourceTSL;
	
		}
	else
		{
		for ($objs in $srbSelObjs)
			textScrollList -edit -append $objs srbUVTargetTSL;
		}
	}

//GLOBAL PROCEDURE FOR srbUVTransferProc---
global proc srbUVTransferProc ()
	{
	int $verterCount_val = `checkBox -q -v verterCountCB`;
	int $assignShader_val = `checkBox -q -v assignShaderCB`;
	int $srbUVTransferOneOptionVar = `radioButton -q -sl srbUVTransferOneRB`;
	int $srbUVTransferAllOptionVar = `radioButton -q -sl srbUVTransferAllRB`;

	string $srbSourceObjectsList[] = `textScrollList -query -allItems	srbUVSourceTSL`;
	string $srbTargetObjectsList[] = `textScrollList -query -allItems	srbUVTargetTSL`;
	int $srbSizeSourceObjs = `size $srbSourceObjectsList`;
	int $srbSizeTargetObjs = `size $srbSourceObjectsList`;


	if($verterCount_val == 0)
		{

		//FOR ONE TO ALL---
		if ($srbUVTransferAllOptionVar == 1)
			{
			if ($srbSizeSourceObjs == $srbSizeTargetObjs)
				{
				for ($objs in $srbTargetObjectsList)
					polyTransfer -v 0 -vc 0 -uv 1 -ao $srbSourceObjectsList[0] $objs;
		
				print "SRB - UV Transfer v0.2 has sucessfully transferred the UV...\n";
				}
			else
				{
				warning "SRB - UV Transfer v0.2 has encounterred a problem. Source object is not equal to target objects...terminating...\n";
				}
			}


	//FOR ONE TO ONE---
		if ($srbUVTransferOneOptionVar == 1)
			{
			if ($srbSizeSourceObjs == $srbSizeTargetObjs)
				{
				for ($i = 0; $i < $srbSizeSourceObjs; $i++)
					{
					polyTransfer -v 0 -vc 0 -uv 1 -ao $srbSourceObjectsList[$i] $srbTargetObjectsList[$i];
					}
		
					print "SRB - UV Transfer v0.2 has sucessfully transferred the UV...\n";
					}
				else
					{
					warning "SRB - UV Transfer v0.2 has encounterred a problem. Source object is not equal to target objects...terminating...\n";
					}
			}
		}

	else
		{

		for($source in $srbSourceObjectsList)
			{
			int $sourceVtx[0] = 	 `polyEvaluate -v $source`; 
	
			for($target in $srbTargetObjectsList)
				{
				int $targetVtx[0] = 	 `polyEvaluate -v $target`; 
				if($sourceVtx[0]==$targetVtx[0])
					{
					polyTransfer -v 0 -vc 0 -uv 1 -ao $source $target;

					if($assignShader_val == 1)
						{
						select -r $source;
						hyperShade -smn "";
						string $getShdr[] = `ls -sl`;
						select -r $target;
						hyperShade -assign  $getShdr;
						//editDisplayLayerMembers -noRecurse layer1 `ls -selection`;
						$removeItem[0] = $target;
						string $srbTargetObjectsList[] = stringArrayRemove($removeItem, $srbTargetObjectsList);
						}
					}
				}
			}
		}
	}


global proc vertexBaseTransfer_proc()
	{
	int $verterCount_val = `checkBox -q -v verterCountCB`;
	checkBox -e -en $verterCount_val assignShaderCB;
	radioButton -e -en ($verterCount_val-1) srbUVTransferOneRB;
	radioButton -e -en ($verterCount_val-1) srbUVTransferAllRB;
	}
//THE END---
/*
*/
